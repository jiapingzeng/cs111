QUESTION 2.1.1 - causing conflicts:
    Why does it take many iterations before errors are seen?
    Why does a significantly smaller number of iterations so seldom fail?

QUESTION 2.1.2 - cost of yielding:
    Why are the --yield runs so much slower?
    Where is the additional time going?
    Is it possible to get valid per-operation timings if we are using the --yield option?
    If so, explain how. If not, explain why not.

QUESTION 2.1.3 - measurement errors:
    Why does the average cost per operation drop with increasing iterations?
    If the cost per iteration is a function of the number of iterations, how do we know how many iterations to run (or what the "correct" cost is)?

QUESTION 2.1.4 - costs of serialization:
    Why do all of the options perform similarly for low numbers of threads?
    Why do the three protected operations slow down as the number of threads rises?

QUESTION 2.2.1 - scalability of Mutex
    Compare the variation in time per mutex-protected operation vs the number of threads in Part-1 (adds) and Part-2 (sorted lists).
    Comment on the general shapes of the curves, and explain why they have this shape.
    Comment on the relative rates of increase and differences in the shapes of the curves, and offer an explanation for these differences.

QUESTION 2.2.2 - scalability of spin locks
    Compare the variation in time per protected operation vs the number of threads for list operations protected by Mutex vs Spin locks. Comment on the general shapes of the curves, and explain why they have this shape.
    Comment on the relative rates of increase and differences in the shapes of the curves, and offer an explanation for these differences.


References:
http://www.cs.tufts.edu/comp/111/examples/Time/clock_gettime.c